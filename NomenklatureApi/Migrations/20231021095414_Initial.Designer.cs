// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NomenklatureApi.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NomenklatureApi.Migrations
{
    [DbContext(typeof(NomenklatureContext))]
    [Migration("20231021095414_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NomenklatureApi.Models.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ChildIdId")
                        .HasColumnType("integer");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<int>("ParentIdId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ChildIdId");

                    b.HasIndex("ParentIdId");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("NomenklatureApi.Models.Nomenklature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Nomenklatures");
                });

            modelBuilder.Entity("NomenklatureApi.Models.ProductMetadata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("MetaDataName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MetaDataValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NomenklatureId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NomenklatureId");

                    b.ToTable("ProductMetaDatas");
                });

            modelBuilder.Entity("NomenklatureApi.Models.Link", b =>
                {
                    b.HasOne("NomenklatureApi.Models.Nomenklature", "ChildId")
                        .WithMany()
                        .HasForeignKey("ChildIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NomenklatureApi.Models.Nomenklature", "ParentId")
                        .WithMany()
                        .HasForeignKey("ParentIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChildId");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("NomenklatureApi.Models.ProductMetadata", b =>
                {
                    b.HasOne("NomenklatureApi.Models.Nomenklature", null)
                        .WithMany("Metadata")
                        .HasForeignKey("NomenklatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NomenklatureApi.Models.Nomenklature", b =>
                {
                    b.Navigation("Metadata");
                });
#pragma warning restore 612, 618
        }
    }
}
